; SMT-LIBv2 description generated by firrtl 1.4-SNAPSHOT for module ShiftAddMultiplier.
(set-logic QF_UFBV)
(set-option :produce-models true)

(declare-sort ShiftAddMultiplier_s 0)
; firrtl-smt2-input reset 1
(declare-fun reset_f (ShiftAddMultiplier_s) Bool)
; firrtl-smt2-input io_inA_valid 1
(declare-fun io_inA_valid_f (ShiftAddMultiplier_s) Bool)
; firrtl-smt2-input io_inA_bits 4
(declare-fun io_inA_bits_f (ShiftAddMultiplier_s) (_ BitVec 4))
; firrtl-smt2-input io_inB_valid 1
(declare-fun io_inB_valid_f (ShiftAddMultiplier_s) Bool)
; firrtl-smt2-input io_inB_bits 4
(declare-fun io_inB_bits_f (ShiftAddMultiplier_s) (_ BitVec 4))
; firrtl-smt2-input io_out_ready 1
(declare-fun io_out_ready_f (ShiftAddMultiplier_s) Bool)
; firrtl-smt2-register aReg 4
; @ ShiftAddMultiplier.scala 25:35, ShiftAddMultiplier.scala 25:35, ShiftAddMultiplier.scala 25:35
(declare-fun aReg_f (ShiftAddMultiplier_s) (_ BitVec 4))
; firrtl-smt2-register bReg 4
; @ ShiftAddMultiplier.scala 26:35, ShiftAddMultiplier.scala 26:35, ShiftAddMultiplier.scala 26:35
(declare-fun bReg_f (ShiftAddMultiplier_s) (_ BitVec 4))
; firrtl-smt2-register outReg 8
; @ ShiftAddMultiplier.scala 28:35, ShiftAddMultiplier.scala 28:35, ShiftAddMultiplier.scala 28:35
(declare-fun outReg_f (ShiftAddMultiplier_s) (_ BitVec 8))
; firrtl-smt2-register value 3
; @ Counter.scala 60:40, Counter.scala 60:40, Counter.scala 60:40
(declare-fun value_f (ShiftAddMultiplier_s) (_ BitVec 3))
; firrtl-smt2-register aAcc 8
; @ ShiftAddMultiplier.scala 36:21, ShiftAddMultiplier.scala 36:21, ShiftAddMultiplier.scala 36:21
(declare-fun aAcc_f (ShiftAddMultiplier_s) (_ BitVec 8))
; firrtl-smt2-register computationInProgress 1
; @ ShiftAddMultiplier.scala 39:38, ShiftAddMultiplier.scala 39:38, ShiftAddMultiplier.scala 39:38
(declare-fun computationInProgress_f (ShiftAddMultiplier_s) Bool)
; firrtl-smt2-wire mask 4
; @ Bitwise.scala 72:12
(define-fun mask_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(ite 
		true 
		(_ bv15 4) 
		(_ bv0 4)))
; firrtl-smt2-wire _T 11
; @ ShiftAddMultiplier.scala 29:34
(define-fun _T_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 11) 
	(bvshl 
		((_ zero_extend 7) 
			(mask_f state_0)) 
		((_ zero_extend 8) 
			(value_f state_0))))
; firrtl-smt2-wire _T_1 4
; @ ShiftAddMultiplier.scala 29:39
(define-fun _T_1_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	((_ extract 3 0) 
		(_T_f state_0)))
; firrtl-smt2-wire _T_2 4
; @ ShiftAddMultiplier.scala 34:22
(define-fun _T_2_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(bvand 
		(bReg_f state_0) 
		(_T_1_f state_0)))
; firrtl-smt2-wire _T_3 8
; @ ShiftAddMultiplier.scala 34:50
(define-fun _T_3_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(bvmul 
		((_ zero_extend 4) 
			(_T_2_f state_0)) 
		((_ zero_extend 4) 
			(aReg_f state_0))))
; firrtl-smt2-wire _T_4 9
; @ ShiftAddMultiplier.scala 34:57
(define-fun _T_4_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 9) 
	(bvadd 
		((_ zero_extend 1) 
			(_T_3_f state_0)) 
		((_ zero_extend 1) 
			(outReg_f state_0))))
; firrtl-smt2-wire _T_5 8
; @ ShiftAddMultiplier.scala 34:57
(define-fun _T_5_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	((_ extract 7 0) 
		(_T_4_f state_0)))
; firrtl-smt2-wire _T_6 8
; @ ShiftAddMultiplier.scala 34:75
(define-fun _T_6_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(bvmul 
		((_ zero_extend 4) 
			(aReg_f state_0)) 
		((_ zero_extend 4) 
			(bReg_f state_0))))
; firrtl-smt2-wire _T_7 1
; @ ShiftAddMultiplier.scala 34:66
(define-fun _T_7_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(= 
		(_T_5_f state_0) 
		(_T_6_f state_0)))
; firrtl-smt2-wire _T_8 1
; @ ShiftAddMultiplier.scala 38:14
(define-fun _T_8_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(not 
		(bvugt 
			(_ bv0 3) 
			(value_f state_0))))
; firrtl-smt2-wire _T_9 1
; @ ShiftAddMultiplier.scala 38:48
(define-fun _T_9_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(not 
		(bvugt 
			(value_f state_0) 
			(_ bv4 3))))
; firrtl-smt2-wire _T_10 1
; @ ShiftAddMultiplier.scala 38:31
(define-fun _T_10_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(_T_8_f state_0) 
		(_T_9_f state_0)))
; firrtl-smt2-wire _T_11 1
; @ ShiftAddMultiplier.scala 41:45
(define-fun _T_11_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(io_inA_valid_f state_0) 
		(io_inB_valid_f state_0)))
; firrtl-smt2-wire _T_26 1
; @ ShiftAddMultiplier.scala 64:19
(define-fun _T_26_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(not 
		(computationInProgress_f state_0)))
; firrtl-smt2-output io_inA_ready 1
; @ ShiftAddMultiplier.scala 64:16
(define-fun io_inA_ready_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(_T_26_f state_0))
; firrtl-smt2-wire _T_12 1
; @ ShiftAddMultiplier.scala 41:61
(define-fun _T_12_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(_T_11_f state_0) 
		(io_inA_ready_f state_0)))
; firrtl-smt2-wire _T_27 1
; @ ShiftAddMultiplier.scala 65:19
(define-fun _T_27_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(not 
		(computationInProgress_f state_0)))
; firrtl-smt2-output io_inB_ready 1
; @ ShiftAddMultiplier.scala 65:16
(define-fun io_inB_ready_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(_T_27_f state_0))
; firrtl-smt2-wire _T_13 1
; @ ShiftAddMultiplier.scala 41:77
(define-fun _T_13_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(_T_12_f state_0) 
		(io_inB_ready_f state_0)))
; firrtl-smt2-wire invariant 1
; @ ShiftAddMultiplier.scala 33:23, ShiftAddMultiplier.scala 34:13
(define-fun invariant_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(_T_7_f state_0))
; firrtl-smt2-wire _T_14 1
; @ ShiftAddMultiplier.scala 49:24
(define-fun _T_14_f ((state_0 ShiftAddMultiplier_s) (state_1 ShiftAddMultiplier_s)) Bool 
	(invariant_f state_1))
; firrtl-smt2-wire _T_15 1
; @ ShiftAddMultiplier.scala 50:53
(define-fun _T_15_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(not 
		(= 
			(value_f state_0) 
			(_ bv4 3))))
; firrtl-smt2-wire _T_16 1
; @ ShiftAddMultiplier.scala 50:36
(define-fun _T_16_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(computationInProgress_f state_0) 
		(_T_15_f state_0)))
; firrtl-smt2-wire _T_17 4
; @ ShiftAddMultiplier.scala 53:34
(define-fun _T_17_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(bvlshr 
		(bReg_f state_0) 
		((_ zero_extend 1) 
			(value_f state_0))))
; firrtl-smt2-wire _T_18 1
; @ ShiftAddMultiplier.scala 53:34
(define-fun _T_18_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(= ((_ extract 0 0) 
		(_T_17_f state_0)) (_ bv1 1)))
; firrtl-smt2-wire _T_19 11
; @ ShiftAddMultiplier.scala 53:56
(define-fun _T_19_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 11) 
	(bvshl 
		((_ zero_extend 7) 
			(aReg_f state_0)) 
		((_ zero_extend 8) 
			(value_f state_0))))
; firrtl-smt2-wire _T_20 11
; @ ShiftAddMultiplier.scala 53:29
(define-fun _T_20_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 11) 
	(ite 
		(_T_18_f state_0) 
		(_T_19_f state_0) 
		(_ bv0 11)))
; firrtl-smt2-wire _T_21 12
; @ ShiftAddMultiplier.scala 53:24
(define-fun _T_21_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 12) 
	(bvadd 
		((_ zero_extend 4) 
			(outReg_f state_0)) 
		((_ zero_extend 1) 
			(_T_20_f state_0))))
; firrtl-smt2-wire _T_22 11
; @ ShiftAddMultiplier.scala 53:24
(define-fun _T_22_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 11) 
	((_ extract 10 0) 
		(_T_21_f state_0)))
; firrtl-smt2-wire wrap 1
; @ Counter.scala 72:24
(define-fun wrap_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(= 
		(value_f state_0) 
		(_ bv4 3)))
; firrtl-smt2-wire _value_T 4
; @ Counter.scala 76:24
(define-fun _value_T_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(bvadd 
		((_ zero_extend 1) 
			(value_f state_0)) 
		(_ bv1 4)))
; firrtl-smt2-wire _value_T_1 3
; @ Counter.scala 76:24
(define-fun _value_T_1_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 3) 
	((_ extract 2 0) 
		(_value_T_f state_0)))
; firrtl-smt2-wire _GEN_0 3
; @ Counter.scala 86:20, Counter.scala 86:28, Counter.scala 76:15
(define-fun _GEN_0_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 3) 
	(ite 
		(wrap_f state_0) 
		(_ bv0 3) 
		(_value_T_1_f state_0)))
; firrtl-smt2-wire _GEN_1 11
; @ ShiftAddMultiplier.scala 50:66, ShiftAddMultiplier.scala 53:14, ShiftAddMultiplier.scala 28:35
(define-fun _GEN_1_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 11) 
	(ite 
		(_T_16_f state_0) 
		(_T_22_f state_0) 
		((_ zero_extend 3) 
			(outReg_f state_0))))
; firrtl-smt2-wire _GEN_2 3
; @ ShiftAddMultiplier.scala 50:66, Counter.scala 60:40
(define-fun _GEN_2_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 3) 
	(ite 
		(_T_16_f state_0) 
		(_GEN_0_f state_0) 
		(value_f state_0)))
; firrtl-smt2-wire _GEN_3 1
; @ ShiftAddMultiplier.scala 42:26, ShiftAddMultiplier.scala 43:27, ShiftAddMultiplier.scala 39:38
(define-fun _GEN_3_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(ite 
		(_T_13_f state_0) 
		true 
		(computationInProgress_f state_0)))
; firrtl-smt2-wire _GEN_4 4
; @ ShiftAddMultiplier.scala 42:26, ShiftAddMultiplier.scala 44:10, ShiftAddMultiplier.scala 25:35
(define-fun _GEN_4_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(ite 
		(_T_13_f state_0) 
		(io_inA_bits_f state_0) 
		(aReg_f state_0)))
; firrtl-smt2-wire _GEN_5 8
; @ ShiftAddMultiplier.scala 42:26, ShiftAddMultiplier.scala 45:10, ShiftAddMultiplier.scala 36:21
(define-fun _GEN_5_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(ite 
		(_T_13_f state_0) 
		((_ zero_extend 4) 
			(io_inA_bits_f state_0)) 
		(aAcc_f state_0)))
; firrtl-smt2-wire _GEN_6 4
; @ ShiftAddMultiplier.scala 42:26, ShiftAddMultiplier.scala 46:10, ShiftAddMultiplier.scala 26:35
(define-fun _GEN_6_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(ite 
		(_T_13_f state_0) 
		(io_inB_bits_f state_0) 
		(bReg_f state_0)))
; firrtl-smt2-wire _GEN_7 11
; @ ShiftAddMultiplier.scala 42:26, ShiftAddMultiplier.scala 47:12
(define-fun _GEN_7_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 11) 
	(ite 
		(_T_13_f state_0) 
		(_ bv0 11) 
		(_GEN_1_f state_0)))
; firrtl-smt2-wire _GEN_8 3
; @ ShiftAddMultiplier.scala 42:26, Counter.scala 97:11
(define-fun _GEN_8_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 3) 
	(ite 
		(_T_13_f state_0) 
		(_ bv0 3) 
		(_GEN_2_f state_0)))
; firrtl-smt2-wire _T_23 1
; @ ShiftAddMultiplier.scala 58:47
(define-fun _T_23_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(= 
		(value_f state_0) 
		(_ bv4 3)))
; firrtl-smt2-wire _T_24 1
; @ ShiftAddMultiplier.scala 58:30
(define-fun _T_24_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(computationInProgress_f state_0) 
		(_T_23_f state_0)))
; firrtl-smt2-wire _GEN_9 1
; @ ShiftAddMultiplier.scala 58:60, ShiftAddMultiplier.scala 59:27
(define-fun _GEN_9_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(ite 
		(_T_24_f state_0) 
		false 
		(_GEN_3_f state_0)))
; firrtl-smt2-wire _GEN_10 3
; @ ShiftAddMultiplier.scala 58:60, Counter.scala 97:11
(define-fun _GEN_10_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 3) 
	(ite 
		(_T_24_f state_0) 
		(_ bv0 3) 
		(_GEN_8_f state_0)))
; firrtl-smt2-wire _T_25 1
; @ ShiftAddMultiplier.scala 63:33
(define-fun _T_25_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(= 
		(value_f state_0) 
		(_ bv4 3)))
; firrtl-smt2-wire _T_28 1
; @ ShiftAddMultiplier.scala 41:45
(define-fun _T_28_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(io_inA_valid_f state_0) 
		(io_inB_valid_f state_0)))
; firrtl-smt2-wire _T_29 1
; @ ShiftAddMultiplier.scala 41:61
(define-fun _T_29_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(_T_28_f state_0) 
		(io_inA_ready_f state_0)))
; firrtl-smt2-wire _T_30 1
; @ ShiftAddMultiplier.scala 41:77
(define-fun _T_30_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(and 
		(_T_29_f state_0) 
		(io_inB_ready_f state_0)))
; firrtl-smt2-wire _T_31 8
; @ ShiftAddMultiplier.scala 69:25
(define-fun _T_31_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(bvmul 
		((_ zero_extend 4) 
			(io_inB_bits_f state_0)) 
		((_ zero_extend 4) 
			(io_inA_bits_f state_0))))
; firrtl-smt2-output io_out_bits 8
; @ ShiftAddMultiplier.scala 66:15
(define-fun io_out_bits_f ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(outReg_f state_0))
; firrtl-smt2-wire _T_32 8
; @ ShiftAddMultiplier.scala 69:59
(define-fun _T_32_f ((state_0 ShiftAddMultiplier_s) (state_1 ShiftAddMultiplier_s) (state_2 ShiftAddMultiplier_s) (state_3 ShiftAddMultiplier_s) (state_4 ShiftAddMultiplier_s) (state_5 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(io_out_bits_f state_5))
; firrtl-smt2-wire _T_33 1
; @ ShiftAddMultiplier.scala 69:39
(define-fun _T_33_f ((state_0 ShiftAddMultiplier_s) (state_1 ShiftAddMultiplier_s) (state_2 ShiftAddMultiplier_s) (state_3 ShiftAddMultiplier_s) (state_4 ShiftAddMultiplier_s) (state_5 ShiftAddMultiplier_s)) Bool 
	(= 
		(_T_31_f state_0) 
		(_T_32_f state_0 state_1 state_2 state_3 state_4 state_5)))
; firrtl-smt2-output io_out_valid 1
; @ ShiftAddMultiplier.scala 63:16
(define-fun io_out_valid_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(_T_25_f state_0))
; firrtl-smt2-assume assume_0 1
; @ ShiftAddMultiplier.scala 38:9
(define-fun assume_0_f ((state_0 ShiftAddMultiplier_s)) Bool 
	(_T_10_f state_0))
; firrtl-smt2-assert assert_BoundedModelCheck_0 1
; @ ShiftAddMultiplier.scala 49:11
(define-fun assert_BoundedModelCheck_0_f ((state_0 ShiftAddMultiplier_s) (state_1 ShiftAddMultiplier_s)) Bool 
	(=> 
		(_T_13_f state_0) 
		(_T_14_f state_0 state_1)))
; firrtl-smt2-assert assert_BoundedModelCheck_1 1
; @ ShiftAddMultiplier.scala 69:11
(define-fun assert_BoundedModelCheck_1_f ((state_0 ShiftAddMultiplier_s) (state_1 ShiftAddMultiplier_s) (state_2 ShiftAddMultiplier_s) (state_3 ShiftAddMultiplier_s) (state_4 ShiftAddMultiplier_s) (state_5 ShiftAddMultiplier_s)) Bool 
	(=> 
		(_T_30_f state_0) 
		(_T_33_f state_0 state_1 state_2 state_3 state_4 state_5)))
(define-fun aReg_next ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(ite 
		(reset_f state_0) 
		(_ bv0 4) 
		(_GEN_4_f state_0)))
(define-fun bReg_next ((state_0 ShiftAddMultiplier_s)) (_ BitVec 4) 
	(ite 
		(reset_f state_0) 
		(_ bv0 4) 
		(_GEN_6_f state_0)))
(define-fun outReg_next ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(ite 
		(reset_f state_0) 
		(_ bv0 8) 
		((_ extract 7 0) 
			(_GEN_7_f state_0))))
(define-fun value_next ((state_0 ShiftAddMultiplier_s)) (_ BitVec 3) 
	(ite 
		(reset_f state_0) 
		(_ bv0 3) 
		(_GEN_10_f state_0)))
(define-fun aAcc_next ((state_0 ShiftAddMultiplier_s)) (_ BitVec 8) 
	(ite 
		(reset_f state_0) 
		(_ bv0 8) 
		(_GEN_5_f state_0)))
(define-fun computationInProgress_next ((state_0 ShiftAddMultiplier_s)) Bool 
	(ite 
		(reset_f state_0) 
		false 
		(_GEN_9_f state_0)))
; This function evaluates to ’true’ if the states ’state’ and
; ’next_state’ form a valid state transition."
(define-fun ShiftAddMultiplier_t ((state ShiftAddMultiplier_s) (state_n ShiftAddMultiplier_s)) Bool 
	(and 
		(and 
			(and 
				(and 
					(and 
						(= 
							(aReg_f state_n) 
							(aReg_next state)) 
						(= 
							(bReg_f state_n) 
							(bReg_next state))) 
					(= 
						(outReg_f state_n) 
						(outReg_next state))) 
				(= 
					(value_f state_n) 
					(value_next state))) 
			(= 
				(aAcc_f state_n) 
				(aAcc_next state))) 
		(= 
			(computationInProgress_f state_n) 
			(computationInProgress_next state))))
; This function must be asserted ’true’ for initial states. For
; non-initial states it must be left unconstrained.
(define-fun ShiftAddMultiplier_i ((state_0 ShiftAddMultiplier_s)) Bool 
	true)
; This function evaluates to ’true’ if all assertions hold in the state.
(define-fun ShiftAddMultiplier_a ((state_0 ShiftAddMultiplier_s) (state_1 ShiftAddMultiplier_s) (state_2 ShiftAddMultiplier_s) (state_3 ShiftAddMultiplier_s) (state_4 ShiftAddMultiplier_s) (state_5 ShiftAddMultiplier_s)) Bool 
	(and 
		(and 
			(assume_0_f state_0) 
			(assert_BoundedModelCheck_0_f state_0 state_1)) 
		(assert_BoundedModelCheck_1_f state_0 state_1 state_2 state_3 state_4 state_5)))
; This function evaluates to ’true’ if all assumptions hold in the state.
(define-fun ShiftAddMultiplier_u ((state_0 ShiftAddMultiplier_s)) Bool 
	(assume_0_f state_0))
(push 1)
(declare-fun state_0 () ShiftAddMultiplier_s)
(declare-fun state_1 () ShiftAddMultiplier_s)
(assert 
	(ShiftAddMultiplier_u state_0))
(assert 
	(ShiftAddMultiplier_u state_1))
(assert 
	(not 
		(reset_f state_0)))
(assert 
	(not 
		(reset_f state_1)))
(assert 
	(ShiftAddMultiplier_t state_0 state_1))
; Assume the dependencies
(assert 
	(not 
		(assert_BoundedModelCheck_0_f state_0 state_1)))
(echo "Checking assert_BoundedModelCheck_0")
(check-sat)
(get-value ((io_inA_valid_f state_0) (io_inA_valid_f state_1)))
(get-value ((io_inB_valid_f state_0) (io_inB_valid_f state_1)))
(get-value ((aReg_f state_0) (aReg_f state_1)))
(get-value ((bReg_f state_0) (bReg_f state_1)))
(get-value ((outReg_f state_0) (outReg_f state_1)))
(get-value ((value_f state_0) (value_f state_1)))
(get-value ((computationInProgress_f state_0) (computationInProgress_f state_1)))
(pop 1)
(push 1)
(declare-fun state_0 () ShiftAddMultiplier_s)
(declare-fun state_1 () ShiftAddMultiplier_s)
(declare-fun state_2 () ShiftAddMultiplier_s)
(declare-fun state_3 () ShiftAddMultiplier_s)
(declare-fun state_4 () ShiftAddMultiplier_s)
(declare-fun state_5 () ShiftAddMultiplier_s)
(assert 
	(ShiftAddMultiplier_u state_0))
(assert 
	(ShiftAddMultiplier_u state_1))
(assert 
	(ShiftAddMultiplier_u state_2))
(assert 
	(ShiftAddMultiplier_u state_3))
(assert 
	(ShiftAddMultiplier_u state_4))
(assert 
	(ShiftAddMultiplier_u state_5))
(assert 
	(not 
		(reset_f state_0)))
(assert 
	(not 
		(reset_f state_1)))
(assert 
	(not 
		(reset_f state_2)))
(assert 
	(not 
		(reset_f state_3)))
(assert 
	(not 
		(reset_f state_4)))
(assert 
	(not 
		(reset_f state_5)))
(assert 
	(ShiftAddMultiplier_t state_0 state_1))
(assert 
	(ShiftAddMultiplier_t state_1 state_2))
(assert 
	(ShiftAddMultiplier_t state_2 state_3))
(assert 
	(ShiftAddMultiplier_t state_3 state_4))
(assert 
	(ShiftAddMultiplier_t state_4 state_5))
; Assume the dependencies
(assert 
	(not 
		(assert_BoundedModelCheck_1_f state_0 state_1 state_2 state_3 state_4 state_5)))
(echo "Checking assert_BoundedModelCheck_1")
(check-sat)
(get-value ((io_inA_valid_f state_0) (io_inA_valid_f state_1) (io_inA_valid_f state_2) (io_inA_valid_f state_3) (io_inA_valid_f state_4) (io_inA_valid_f state_5)))
(get-value ((io_inA_bits_f state_0) (io_inA_bits_f state_1) (io_inA_bits_f state_2) (io_inA_bits_f state_3) (io_inA_bits_f state_4) (io_inA_bits_f state_5)))
(get-value ((io_inB_valid_f state_0) (io_inB_valid_f state_1) (io_inB_valid_f state_2) (io_inB_valid_f state_3) (io_inB_valid_f state_4) (io_inB_valid_f state_5)))
(get-value ((io_inB_bits_f state_0) (io_inB_bits_f state_1) (io_inB_bits_f state_2) (io_inB_bits_f state_3) (io_inB_bits_f state_4) (io_inB_bits_f state_5)))
(get-value ((outReg_f state_0) (outReg_f state_1) (outReg_f state_2) (outReg_f state_3) (outReg_f state_4) (outReg_f state_5)))
(get-value ((computationInProgress_f state_0) (computationInProgress_f state_1) (computationInProgress_f state_2) (computationInProgress_f state_3) (computationInProgress_f state_4) (computationInProgress_f state_5)))
(pop 1)
